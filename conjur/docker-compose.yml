version: '3'
services:
  openssl:
    image: docker.io/cyberark/conjur
    container_name: openssl
    entrypoint:
     - openssl
     - req
     - -newkey
     - rsa:2048
     - -days
     - "365"
     - -nodes
     - -x509
     - -config
     - /tmp/conf/tls.conf
     - -extensions
     - v3_ca
     - -keyout
     - /tmp/conf/nginx.key
     - -out
     - /tmp/conf/nginx.crt
    volumes:
     - ./conf/tls/:/tmp/conf:z

  bot_app:
    image: docker.io/cfmanteiga/alpine-bash-curl-jq
    privileged: true
    container_name: bot_app
    command: tail -F anything
    volumes:
    - ./program.sh:/tmp/program.sh:z
    restart: on-failure

  database:
    image: docker.io/postgres:15
    container_name: postgres_database
    environment:
      POSTGRES_HOST_AUTH_METHOD: password
      POSTGRES_PASSWORD: SuperSecretPg
    ports:
      - 8432:5432

  pgadmin:
#    https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html
    image: docker.io/dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.com
      PGADMIN_DEFAULT_PASSWORD: SuperSecret
    ports:
      - 8081:80

  conjur:
    image: docker.io/cyberark/conjur
    container_name: conjur_server
    command: server
    environment:
      DATABASE_URL: postgres://postgres:SuperSecretPg@database/postgres
      CONJUR_DATA_KEY: ${CONJUR_DATA_KEY}
      CONJUR_AUTHENTICATORS:
      CONJUR_TELEMETRY_ENABLED: 'false'
    depends_on:
    - database
    restart: on-failure
    ports:
      - 8080:80

  proxy:
    image: docker.io/nginx:latest
    container_name: nginx_proxy
    ports:
      - "8443:443"
    volumes:
      - ./conf/:/etc/nginx/conf.d/:z
      - ./conf/tls/:/etc/nginx/tls/:z
    depends_on:
    - conjur
    - openssl
    restart: on-failure

  client:
    image: docker.io/cyberark/conjur-cli:8
    container_name: conjur_client
    depends_on: [ proxy ]
    entrypoint: sleep
    command: infinity
    volumes:
    - ./conf/policy:/policy:z
